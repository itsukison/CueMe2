name: Test Build

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: mac
          - os: windows-latest
            platform: win

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        if: hashFiles('pnpm-lock.yaml') != ''
        with:
          version: latest

      - name: Clean and install dependencies
        run: |
          echo "Cleaning previous installations..."
          rm -rf node_modules

          if [ -f "pnpm-lock.yaml" ]; then
            echo "Using pnpm..."
            pnpm install --frozen-lockfile
          elif [ -f "package-lock.json" ]; then
            echo "Using npm..."
            npm ci
          else
            echo "Using npm (fallback)..."
            npm install
          fi

      - name: Install Linux dependencies
        if: matrix.platform == 'linux'
        run: |
          echo "Installing Linux dependencies for Electron..."
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxkbcommon-dev libxss1 libasound2-dev libxtst6 libatspi2.0-0 libdrm2 libxdamage1 libxrandr2 libgbm1 libxcomposite1 libxcursor1 libxi6 libgtk-3-0
          echo "Linux dependencies installed successfully"

      - name: Test build only (no publish)
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
          CSC_LINK: ""
          CSC_KEY_PASSWORD: ""
          DEBUG: "electron-builder"
        run: |
          echo "Starting test build for platform: ${{ matrix.platform }}"
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"

          echo "Running npm run build..."
          npm run build

          echo "Running electron-builder (dry run)..."
          npx electron-builder --${{ matrix.platform }} --verbose --dir

          echo "Test build completed for ${{ matrix.platform }}"

      - name: List build outputs
        run: |
          echo "Listing build outputs:"
          find . -name "dist" -type d -exec ls -la {} \; || echo "No dist directory found"
          find . -name "release" -type d -exec ls -la {} \; || echo "No release directory found"
